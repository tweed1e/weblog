<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Jesse Tweedle</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Jesse Tweedle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Dec 2017 15:33:11 -0500</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Post-selection inference on Friends titles in R</title>
      <link>/post/2017-12-22-post-selection-inference-on-friends-titles-in-r/</link>
      <pubDate>Fri, 22 Dec 2017 15:33:11 -0500</pubDate>
      
      <guid>/post/2017-12-22-post-selection-inference-on-friends-titles-in-r/</guid>
      <description>Goal I want to be a Friends scriptwriter. Can I pick a title that makes an episode an automatic classic? If I just include a character’s name in the title, does it make it automatically popular? I assume I should just write “The One Where Rachel is Rachel”. But let’s investigate.
The question: what is the effect of a character’s name in the episode title on the episode rating?
 Data We’ll use Friends data we rvested from IMDB in a previous post, or just load it via devtools::install_github(&#39;tweed1e/werfriends&#39;).</description>
    </item>
    
    <item>
      <title>rvest &#43; imdb -&gt; explore Friends episode titles</title>
      <link>/post/2017-12-18-rvest-friends-episodes/</link>
      <pubDate>Mon, 18 Dec 2017 15:33:11 -0500</pubDate>
      
      <guid>/post/2017-12-18-rvest-friends-episodes/</guid>
      <description>I always wanted to be a scriptwriter. But my approach to doing creative things is “find the secret, program it, retire”. So what’s the secret to a successful Friends episode? [Really, I want to write/experience a gentle introduction to rvest, and later tidytext and language data science.]
Get data I’ll get data on Friends episodes from IMDB via rvest (see here for tutorials and documentation).
Start your engines:
library(tidyverse) library(rvest) library(skimr) library(ggplot2) library(ggrepel) library(tidytext) First, find the link, and download some html.</description>
    </item>
    
    <item>
      <title>Functional programming #rstats: closure hack for parallel processing on windows!</title>
      <link>/post/rstats-closure-windows-parallel/</link>
      <pubDate>Sun, 17 Dec 2017 15:33:11 -0500</pubDate>
      
      <guid>/post/rstats-closure-windows-parallel/</guid>
      <description>Your situation:  you have a big data frame you want to apply a (pretty complex) function to each row you are on a Windows server  For example, you know baby names are much cooler when they have no vowels and no uppercase letters.
# a dataset of babynames library(babynames) # a function that drops vowels from names drop_vowels &amp;lt;- function(text) { gsub(&amp;quot;[aeiou]&amp;quot;, &amp;quot;&amp;quot;, text) } mutate_names &amp;lt;- function(tbl) { # names are cooler with no vowels and no capital letters.</description>
    </item>
    
  </channel>
</rss>